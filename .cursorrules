{
  "language": "日本語",
  "typescript": {
    "indentSize": 2,
    "standardizeQuotes": true,
    "preferSingleQuotes": true,
    "trailingCommas": true,
    "arrowParens": "always",
    "semicolons": true
  },
  "codeStyle": {
    "functionalProgramming": true,
    "preferSimpleDesign": true,
    "avoidPrematureOptimization": true,
    "robustApiResponseHandling": true,
    "typeSafeCode": true
  },
  "jest": {
    "preferRedGreenRefactorWorkflow": true,
    "generateComprehensiveTestCases": true,
    "includeEdgeCases": true,
    "mockExternalDependencies": true
  },
  "documentation": {
    "documentationFirst": true,
    "commentLanguages": [
      "ja",
      "en"
    ],
    "requireDescriptiveVariableNames": true,
    "autoGenerateJsdoc": true,
    "updateDocumentation": true,
    "documentationLocation": "docs",
    "documentationNamingConvention": "kebab-case",
    "documentationTemplates": {
      "feature": "docs/templates/feature-template.md",
      "module": "docs/templates/module-template.md",
      "adr": "docs/templates/adr-template.md"
    },
    "requireMetadata": {
      "lastUpdated": true,
      "authors": true,
      "relatedDocuments": true
    }
  },
  "fileOrganization": {
    "docsDirectory": "docs",
    "sourceDirectory": "src",
    "modulesDirectory": "src/lib",
    "separateTestFiles": true,
    "enforceStructure": true,
    "docsFolderStructure": {
      "enforceHierarchy": true,
      "categories": [
        "adr",
        "api",
        "data",
        "decisions",
        "features",
        "modules",
        "planning",
        "processes",
        "research",
        "setup",
        "templates"
      ]
    }
  },
  "commit": {
    "format": "<type>: <簡潔な概要>",
    "types": [
      "feat",
      "fix",
      "docs",
      "style",
      "refactor",
      "test",
      "chore"
    ],
    "atomicCommits": true,
    "linkToIssues": true,
    "includeAiAttribution": true
  },
  "workflowHooks": {
    "enforceDocumentationUpdate": true,
    "enforceTestsForNewFeatures": true,
    "enforceAdrForArchitectureChanges": true,
    "enforceImplementationStatusUpdate": true,
    "preCommitChecks": {
      "validateDocumentLinks": true,
      "checkDocumentationMetadata": true,
      "verifyDocsStructure": true
    }
  },
  "taskChuteSpecific": {
    "featureModules": [
      "taskManager",
      "timeBlockGenerator",
      "logRecorder",
      "routineManager"
    ],
    "todoistApiHandling": {
      "handleMultipleResponseFormats": true,
      "useTypedResponses": true,
      "abstractApiCalls": true
    },
    "cliFormatting": {
      "colorCodePriorities": true,
      "useStatusSymbols": true,
      "customizableDisplay": true
    },
    "serverlessFirst": true
  },
  "tdd": {
    "cycle": "red-green-refactor",
    "steps": {
      "red": {
        "description": "最初に失敗するテストを書く",
        "rules": [
          "新機能を追加する前に必ずテストを書く",
          "テストは失敗することを確認する（赤）",
          "明確なテスト名と期待する結果を記述する"
        ]
      },
      "green": {
        "description": "テストをパスする最小限のコードを実装する",
        "rules": [
          "テストをパスするためだけの簡単な実装を行う",
          "この段階では実装の美しさよりもテストのパスを優先する",
          "「動作する一番シンプルな実装」を目指す"
        ]
      },
      "refactor": {
        "description": "コードをリファクタリングする",
        "rules": [
          "テストをパスしたら、コードを改善する",
          "コードの重複を排除し、可読性を向上させる",
          "テストが引き続きパスすることを確認する"
        ]
      }
    },
    "importantPoints": [
      "各サイクルは短く保つ（5〜10分程度）",
      "一度に複数の機能を実装しない",
      "すべてのコード変更はテストによってカバーされる",
      "テストを先に書くことで設計が改善される"
    ],
    "projectSpecificRules": [
      "TodoistAPIとの連携部分は適切なモックを使用してテスト",
      "コンソール出力の整形に関するテストはスナップショットテストを活用",
      "階層構造のデータに関するテストは複雑になりがちなので、適切なテストヘルパーを作成する"
    ]
  }
}